[{"E:\\REACT JS PRACTISE\\login_github\\src\\index.js":"1","E:\\REACT JS PRACTISE\\login_github\\src\\App.js":"2","E:\\REACT JS PRACTISE\\login_github\\src\\reportWebVitals.js":"3","E:\\REACT JS PRACTISE\\login_github\\src\\components\\RefForm\\index.js":"4","E:\\REACT JS PRACTISE\\login_github\\src\\components\\RefForm\\Container.js":"5","E:\\REACT JS PRACTISE\\login_github\\src\\components\\RefForm\\Presentation.js":"6"},{"size":517,"mtime":1619448852837,"results":"7","hashOfConfig":"8"},{"size":194,"mtime":1620031330222,"results":"9","hashOfConfig":"8"},{"size":144,"mtime":1619448852839,"results":"10","hashOfConfig":"8"},{"size":63,"mtime":1620031213068,"results":"11","hashOfConfig":"8"},{"size":2351,"mtime":1620050989402,"results":"12","hashOfConfig":"8"},{"size":4285,"mtime":1620112109193,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yw7dti",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"E:\\REACT JS PRACTISE\\login_github\\src\\index.js",[],["28","29"],"E:\\REACT JS PRACTISE\\login_github\\src\\App.js",[],"E:\\REACT JS PRACTISE\\login_github\\src\\reportWebVitals.js",[],"E:\\REACT JS PRACTISE\\login_github\\src\\components\\RefForm\\index.js",[],"E:\\REACT JS PRACTISE\\login_github\\src\\components\\RefForm\\Container.js",[],"E:\\REACT JS PRACTISE\\login_github\\src\\components\\RefForm\\Presentation.js",["30"],"import React, { useState } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TextField, Grid, Button, Card, MenuItem ,Paper} from \"@material-ui/core\";\r\nimport '../../styles/regForm.css'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nconst gender = [\r\n  {\r\n    value: \"male\",\r\n    label: \"male\",\r\n  },\r\n  {\r\n    value: \"female\",\r\n    label: \"female\",\r\n  },\r\n  {\r\n    value: \"other\",\r\n    label: \"other\",\r\n  },\r\n];\r\nconst Presentation = (props) => {\r\n  console.log(props.email);\r\n  const {selectedDate,handleDateChange,handleFirstName,firstName,Email,Phone,handlePhone,handleEmail,LastName,handleLastName,EmailError,PhoneError,handleClear}=props\r\n // console.log(email);\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__main\">\r\n        <Paper className=\"login__card\" elevation={1} />\r\n        <div className=\"login__form\">\r\n          <h4>LOGIN FORM</h4>\r\n          <form>\r\n          \r\n          <Card className=\"Card\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"First name\"\r\n              name=\"firstname\"\r\n              variant=\"standard\"\r\n              value={firstName}\r\n              onChange={handleFirstName}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"last name\"\r\n              name=\"lastname\"\r\n              variant=\"standard\"\r\n              value={LastName}\r\n              onChange={handleLastName}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"email*\"\r\n              name=\"email\"\r\n              variant=\"standard\"\r\n              value={Email}\r\n              onChange={handleEmail}\r\n              helperText={EmailError}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"phone*\"\r\n              value={Phone}\r\n              onChange={handlePhone}\r\n              type={Number}\r\n              name=\"phone\"\r\n              helperText={PhoneError}\r\n              variant=\"standard\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"standard-select-currency\"\r\n              select\r\n              label=\"Select\"\r\n              helperText=\"Please select your gender\"\r\n            >\r\n              {gender.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justify=\"space-around\">\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"DOB\"\r\n                  label=\"DOB\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={12}>\r\n           <Button disabled={EmailError&&PhoneError}>submit</Button>\r\n          </Grid> */}\r\n        </Grid>\r\n      </Card>\r\n            <div className=\"loginbuttons\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClear}\r\n              >\r\n                clear\r\n              </Button>\r\n              <Button size=\"small\" variant=\"contained\" color=\"primary\">\r\n                login\r\n              </Button>\r\n            </div>\r\n            {/* <div>\r\n              <h4>forgot password?</h4>\r\n            </div> */}\r\n            <div className=\"login__footer\"></div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Presentation;\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]